[n_obs,n_vars]=size(T);
[trainInd,valInd,testInd] = divideblock(n_obs,0.8,0.05,0.15);
trainingData=T(trainInd,:);
validateData=T(valInd,:);
testData=T(testInd,:);
%%

net=alexnet;
net.Layers
                      
%%
% Options for step 1.
optionsStage1 = trainingOptions('sgdm', ...
    'LearnRateSchedule','piecewise',...
    'LearnRateDropFactor',0.5,...
    'LearnRateDropPeriod',5,...
    'MaxEpochs', 25, ...
    'InitialLearnRate', 1e-4, ...
    'MiniBatchSize',64,...
    'CheckpointPath', tempdir);

% Options for step 2.
optionsStage2 = trainingOptions('sgdm', ...
    'MaxEpochs', 25, ...
    'InitialLearnRate', 1e-4, ...
    'MiniBatchSize',64,...
    'CheckpointPath', tempdir);

% Options for step 3.
optionsStage3 = trainingOptions('sgdm', ...
    'MaxEpochs', 20, ...
    'InitialLearnRate', 1e-4, ...
    'MiniBatchSize',64,...
    'CheckpointPath', tempdir);

% Options for step 4.
optionsStage4 = trainingOptions('sgdm', ...
    'MaxEpochs', 20, ...
    'InitialLearnRate', 1e-4, ...
    'MiniBatchSize',64,...
    'CheckpointPath', tempdir);

options = [
    optionsStage1
    optionsStage2
    optionsStage3
    optionsStage4
    ];

%%
rng(0);

% Train Faster R-CNN detector. Select a BoxPyramidScale of 1.2 to allow
% for finer resolution for multiscale object detection.
detector = trainFasterRCNNObjectDetector(trainingData, net, options, ...
    'NegativeOverlapRange', [0 0.1], ...
    'PositiveOverlapRange', [0.7 1], ...
    'SmallestImageDimension',600,...
    'BoxPyramidScale', 1.25);

save(cur_detector_file,'detector','trainingData','testData','validateData')
